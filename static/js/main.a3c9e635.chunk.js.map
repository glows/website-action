{"version":3,"sources":["layouts/BasicLayout.tsx","pages/Home/index.tsx","pages/Whale/Beluga/index.tsx","pages/Whale/Blue/index.tsx","pages/Whale/index.tsx","pages/About/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BasicLayout","props","pathName","className","href","Date","toLocaleString","Home","location","useLocation","console","log","pathname","Beluga","Blue","Whale","path","useRouteMatch","About","App","basename","to","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA2BeA,EArBK,SAACC,GACnB,OACE,gCACE,uBADF,oBAEoBA,EAAMC,SACxB,sBAAKC,UAAU,SAAf,UACE,gCACE,mBAAGC,KAAK,IAAR,SACE,6CAFJ,OAKE,mBAAGA,KAAK,2BAAR,SACE,wDAPN,kBAUiB,IAAIC,MAAOC,wBCDnBC,EAhBF,WACX,IAAIC,EAAWC,cAEf,OADAC,QAAQC,IAAI,WAAYH,EAASI,UAE/B,iZAOE,cAAC,EAAD,CAAaV,SAAUM,EAASI,eCDvBC,EARA,SAACZ,GACZ,OACI,0CCMOa,EARF,SAACb,GACV,OACI,wCC0BOc,EA3BD,WAAM,IAKVC,EAASC,cAATD,KAER,OACE,8BACE,qCACE,uCAIA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,WAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,SAAX,SACE,cAAC,EAAD,eCZGE,EARD,SAACjB,GACX,OACI,yCCgEOkB,MA9Df,SAAalB,GACX,OACE,sBAAKE,UAAU,MAAf,UACE,gDACA,eAAC,IAAD,CAAeiB,SAAS,kBAAxB,UACE,+BACE,+BACE,cAAC,IAAD,CAAMC,GAAG,WAAT,uBAFJ,iBAKE,iCACE,cAAC,IAAD,CAAMA,GAAG,WAAT,qBADF,oBAIA,iCACE,cAAC,IAAD,CAAMA,GAAG,SAAT,mBADF,oBAIA,iCACE,cAAC,IAAD,CAAMA,GAAG,gBAAT,0BADF,oBAIA,+BACE,cAAC,IAAD,CAAMA,GAAG,cAAT,0BAlBJ,iBAqBE,+BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAtBJ,iBAyBE,+BACE,cAAC,IAAD,CAAMA,GAAG,mBAAT,6BAGN,uBAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACN,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,gBC9CGO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3c9e635.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Props {\n  pathName: string;\n}\n\nconst BasicLayout = (props: Props) => {\n  return (\n    <div>\n      <hr />\n      This page online {props.pathName}\n      <div className=\"footer\">\n        <div>\n          <a href=\"/\">\n            <em>Steven : </em>\n          </a>\n          &nbsp;\n          <a href=\"mailto:duncyun@gmail.com\">\n            <em>duncyun@gmail.com</em>\n          </a>\n        </div>\n        Last updated: {new Date().toLocaleString()}\n      </div>\n    </div>\n  );\n};\n\nexport default BasicLayout;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport BasicLayout from \"../../layouts/BasicLayout\";\n\nconst Home = () => {\n  let location = useLocation();\n  console.log(\"location\", location.pathname);\n  return (\n    <div>\n      \"I am one of those who are very willing to be refuted if I say anything\n      which is not true, and very willing to refute any one else who says what\n      is not true, and quite as ready to be refuted as to refute- for I hold\n      that this is the greater gain of the two, just as the gain is greater of\n      being cured of a very great evil than of curing another.\" - Socrates,\n      Gorgias\n      <BasicLayout pathName={location.pathname}></BasicLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react'\n\ninterface Props {\n    \n}\n\nconst Beluga = (props: Props) => {\n    return (\n        <div>\n            Beluga\n        </div>\n    )\n}\n\nexport default Beluga\n","import React from 'react'\n\ninterface Props {\n    \n}\n\nconst Blue = (props: Props) => {\n    return (\n        <div>\n            Blue\n        </div>\n    )\n}\n\nexport default Blue","import React from \"react\";\n// import { useLocation } from \"react-router-dom\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport Beluga from \"./Beluga\";\nimport Blue from \"./Blue\";\n\nconst Whale = () => {\n  // const { search } = useLocation();\n  // const match = search.match(/type=(.*)/);\n  // const type = match?.[1];\n\n  const { path } = useRouteMatch();\n\n  return (\n    <div>\n      <>\n        <h2>Whale</h2>\n        {/* {type === \"beluga\" && <Beluga />}\n        {type === \"blue\" && <Blue />} */}\n\n        <Switch>\n          <Route path={`${path}/beluga`}>\n            <Beluga />\n          </Route>\n          <Route path={`${path}/blue`}>\n            <Blue />\n          </Route>\n        </Switch>\n      </>\n    </div>\n  );\n};\n\nexport default Whale;\n","import React from 'react'\n\ninterface Props {\n    \n}\n\nconst About = (props: Props) => {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n\nexport default About\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n\nimport Manatee from \"./pages/Home\";\n// import Narwhal from \"./pages/Narwhal\";\nimport Whale from \"./pages/Whale\";\nimport About from \"./pages/About\";\n\nfunction App(props: any) {\n  return (\n    <div className=\"App\">\n      <h1>Marine Mammals</h1>\n      <BrowserRouter basename=\"/website-action\">\n        <h3>\n          <span>\n            <Link to=\"/manatee\">Manatee</Link>\n          </span>\n          &nbsp;&bull;&nbsp;\n          <span>\n            <Link to=\"/narwhal\">Narwhal</Link>\n            &nbsp;&bull;&nbsp;\n          </span>\n          <span>\n            <Link to=\"/whale\">Whale</Link>\n            &nbsp;&bull;&nbsp;\n          </span>\n          <span>\n            <Link to=\"/whale/beluga\">Beluga Whale</Link>\n            &nbsp;&bull;&nbsp;\n          </span>\n          <span>\n            <Link to=\"/whale/blue\">Blue Whale</Link>\n          </span>\n          &nbsp;&bull;&nbsp;\n          <span>\n            <Link to=\"/about\">About</Link>\n          </span>\n          &nbsp;&bull;&nbsp;\n          <span>\n            <Link to=\"/whale?type=blue\">Blue Whale</Link>\n          </span>\n        </h3>\n      <hr />\n\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Manatee />\n          </Route>\n          <Route path=\"/manatee\">\n            <Manatee />\n          </Route>\n\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          <Route path=\"/whale\">\n            <Whale />\n          </Route>\n          {/* <Route path=\"/whale/:type\">\n            <Whale />\n          </Route> */}\n        </Switch>\n      </BrowserRouter>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}